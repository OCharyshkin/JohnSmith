{"id":"view_reset_state","title":"Using resetState method","children":[],"isNew":false,"markup":"<script id='personDetailsTemplate' type='text/view'>\n    <table class='table table-bordered'>\n        <tr>\n            <th>First name:</th>\n            <td class='firstName'></td>\n        </tr>\n        <tr>\n            <th>Last name:</th>\n            <td class='lastName'></td>\n        </tr>\n    </table>\n</script>\n\n<div id=\"meDetails\">\n</div>","code":"var ViewModel = function(){\n    this.firstName = js.bindableValue(),\n    this.lastName = js.bindableValue(),\n    this.resetState = function(){\n        // this function will be called by the vew after rendering.\n        this.firstName.setValue(\"John\");\n        this.lastName.setValue(\"Smith\");\n    };\n};\n\nvar PersonView = function(){\n    this.template = \"#personDetailsTemplate\";\n    this.init = function(viewModel){\n        this.bind(viewModel.firstName).to(\".firstName\");\n        this.bind(viewModel.lastName).to(\".lastName\");\n    };\n};\n\nvar view = js.createView(PersonView, new ViewModel());\n\nview.renderTo(\"#meDetails\");","description":"<p><code>resetState</code> is a point to initialize bindable values. <code>resetState</code> is called by the veiw after rendering when all bindable values are ready.</p>"}